{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Proyectos/DWECL/DWECL/proyecto/src/components/NavComponent.js\";\n// NavComponent.js\nimport React from 'react';\nimport { PIELES } from '../data/Pieles';\n\n// Este componente agrupa las categorías y subcategorías y las renderiza en un menú\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavComponent = () => {\n  // Objeto para agrupar las categorías\n  const groupedCategories = {};\n\n  // Recorrer cada producto\n  PIELES.productos.forEach(producto => {\n    const cat = producto.categoria;\n    // Si la categoría tiene el separador \" > \", separamos en categoría principal y subcategoría\n    if (cat.includes(\" > \")) {\n      const [mainCat, subCat] = cat.split(\" > \").map(item => item.trim());\n      if (!groupedCategories[mainCat]) {\n        groupedCategories[mainCat] = []; // inicializamos el array de subcategorías\n      }\n      // Agregamos la subcategoría solo si no está ya incluida\n      if (!groupedCategories[mainCat].includes(subCat)) {\n        groupedCategories[mainCat].push(subCat);\n      }\n    } else {\n      // Si no hay separador, se guarda la categoría principal sin subcategorías\n      if (!groupedCategories[cat]) {\n        groupedCategories[cat] = [];\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"menu\",\n      children: Object.keys(groupedCategories).map(mainCat => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"menu-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"menu-title\",\n          children: [mainCat, \" \", groupedCategories[mainCat].length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), groupedCategories[mainCat].length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"submenu\",\n          children: groupedCategories[mainCat].map(subCat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"submenu-item\",\n            children: subCat\n          }, subCat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, mainCat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = NavComponent;\nexport default NavComponent;\nvar _c;\n$RefreshReg$(_c, \"NavComponent\");","map":{"version":3,"names":["React","PIELES","jsxDEV","_jsxDEV","NavComponent","groupedCategories","productos","forEach","producto","cat","categoria","includes","mainCat","subCat","split","map","item","trim","push","children","className","Object","keys","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/Proyectos/DWECL/DWECL/proyecto/src/components/NavComponent.js"],"sourcesContent":["// NavComponent.js\nimport React from 'react';\nimport { PIELES } from '../data/Pieles';\n\n// Este componente agrupa las categorías y subcategorías y las renderiza en un menú\nconst NavComponent = () => {\n    // Objeto para agrupar las categorías\n    const groupedCategories = {};\n\n    // Recorrer cada producto\n    PIELES.productos.forEach(producto => {\n        const cat = producto.categoria;\n        // Si la categoría tiene el separador \" > \", separamos en categoría principal y subcategoría\n        if (cat.includes(\" > \")) {\n            const [mainCat, subCat] = cat.split(\" > \").map(item => item.trim());\n            if (!groupedCategories[mainCat]) {\n                groupedCategories[mainCat] = []; // inicializamos el array de subcategorías\n            }\n            // Agregamos la subcategoría solo si no está ya incluida\n            if (!groupedCategories[mainCat].includes(subCat)) {\n                groupedCategories[mainCat].push(subCat);\n            }\n        } else {\n            // Si no hay separador, se guarda la categoría principal sin subcategorías\n            if (!groupedCategories[cat]) {\n                groupedCategories[cat] = [];\n            }\n        }\n    });\n\n    return (\n        <nav>\n            <ul className=\"menu\">\n                {Object.keys(groupedCategories).map(mainCat => (\n                    <li key={mainCat} className=\"menu-item\">\n                        {/* Se muestra el nombre de la categoría principal */}\n                        <span className=\"menu-title\">\n                            {mainCat}{\" \"}\n                            {groupedCategories[mainCat].length > 0 && (\n                                <span className=\"arrow\">▼</span>\n                            )}\n                        </span>\n                        {/* Si hay subcategorías, se muestran en un submenú */}\n                        {groupedCategories[mainCat].length > 0 && (\n                            <ul className=\"submenu\">\n                                {groupedCategories[mainCat].map(subCat => (\n                                    <li key={subCat} className=\"submenu-item\">\n                                        {subCat}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavComponent;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,gBAAgB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB;EACA,MAAMC,iBAAiB,GAAG,CAAC,CAAC;;EAE5B;EACAJ,MAAM,CAACK,SAAS,CAACC,OAAO,CAACC,QAAQ,IAAI;IACjC,MAAMC,GAAG,GAAGD,QAAQ,CAACE,SAAS;IAC9B;IACA,IAAID,GAAG,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;MACrB,MAAM,CAACC,OAAO,EAAEC,MAAM,CAAC,GAAGJ,GAAG,CAACK,KAAK,CAAC,KAAK,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACnE,IAAI,CAACZ,iBAAiB,CAACO,OAAO,CAAC,EAAE;QAC7BP,iBAAiB,CAACO,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;MACrC;MACA;MACA,IAAI,CAACP,iBAAiB,CAACO,OAAO,CAAC,CAACD,QAAQ,CAACE,MAAM,CAAC,EAAE;QAC9CR,iBAAiB,CAACO,OAAO,CAAC,CAACM,IAAI,CAACL,MAAM,CAAC;MAC3C;IACJ,CAAC,MAAM;MACH;MACA,IAAI,CAACR,iBAAiB,CAACI,GAAG,CAAC,EAAE;QACzBJ,iBAAiB,CAACI,GAAG,CAAC,GAAG,EAAE;MAC/B;IACJ;EACJ,CAAC,CAAC;EAEF,oBACIN,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAIiB,SAAS,EAAC,MAAM;MAAAD,QAAA,EACfE,MAAM,CAACC,IAAI,CAACjB,iBAAiB,CAAC,CAACU,GAAG,CAACH,OAAO,iBACvCT,OAAA;QAAkBiB,SAAS,EAAC,WAAW;QAAAD,QAAA,gBAEnChB,OAAA;UAAMiB,SAAS,EAAC,YAAY;UAAAD,QAAA,GACvBP,OAAO,EAAE,GAAG,EACZP,iBAAiB,CAACO,OAAO,CAAC,CAACW,MAAM,GAAG,CAAC,iBAClCpB,OAAA;YAAMiB,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAClC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAENtB,iBAAiB,CAACO,OAAO,CAAC,CAACW,MAAM,GAAG,CAAC,iBAClCpB,OAAA;UAAIiB,SAAS,EAAC,SAAS;UAAAD,QAAA,EAClBd,iBAAiB,CAACO,OAAO,CAAC,CAACG,GAAG,CAACF,MAAM,iBAClCV,OAAA;YAAiBiB,SAAS,EAAC,cAAc;YAAAD,QAAA,EACpCN;UAAM,GADFA,MAAM;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEX,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAA,GAjBIf,OAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACC,EAAA,GApDIxB,YAAY;AAsDlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}