{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Proyectos/DWECL/DWECL/REACT/cincolobitos/src/App.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from 'reactstrap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      botoncitos: Array(5).fill('secondary'),\n      contadores: Array(5).fill(0),\n      decrementando: false\n    };\n  }\n  setSeleccionado(num) {\n    // Incrementar el contador del botón seleccionado\n    const nuevosContadores = [...this.state.contadores];\n    nuevosContadores[num] += 1;\n\n    // Cambiar el color del botón seleccionado a \"info\"\n    const nuevosBotoncitos = [...this.state.botoncitos];\n    nuevosBotoncitos[num] = 'info';\n    this.setState({\n      contadores: nuevosContadores,\n      botoncitos: nuevosBotoncitos\n    });\n\n    // Iniciar el proceso de reducción si no está en marcha\n    if (!this.state.decrementando) {\n      this.iniciarReduccion();\n    }\n  }\n  iniciarReduccion() {\n    this.setState({\n      decrementando: true\n    });\n    const reducir = () => {\n      let contadores = [...this.state.contadores];\n\n      // Ordenar los índices por el valor de los contadores, de mayor a menor\n      const indicesOrdenados = contadores.map((valor, index) => ({\n        valor,\n        index\n      })).filter(item => item.valor > 0) // Filtrar solo botones activos\n      .sort((a, b) => b.valor - a.valor) // Ordenar por valor descendente\n      .map(item => item.index);\n      if (indicesOrdenados.length > 0) {\n        // Reducir el valor del contador más alto\n        const maxIndex = indicesOrdenados[0];\n        contadores[maxIndex] -= 1;\n\n        // Actualizar colores y contadores\n        const nuevosBotoncitos = Array(5).fill('secondary');\n        contadores.forEach((contador, index) => {\n          if (contador > 0) {\n            nuevosBotoncitos[index] = 'info';\n          }\n        });\n        this.setState({\n          contadores,\n          botoncitos: nuevosBotoncitos\n        }, () => {\n          // Continuar si todavía hay contadores activos\n          if (indicesOrdenados.some(index => contadores[index] > 0)) {\n            setTimeout(reducir, 1000); // Reducir nuevamente después de 1 segundo\n          } else {\n            this.setState({\n              decrementando: false\n            });\n          }\n        });\n      }\n    };\n    reducir();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Botoncillo, {\n            numBoton: 0,\n            color: this.state.botoncitos[0],\n            pulsar: n => this.setSeleccionado(n),\n            contador: this.state.contadores[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Botoncillo, {\n            numBoton: 1,\n            color: this.state.botoncitos[1],\n            pulsar: n => this.setSeleccionado(n),\n            contador: this.state.contadores[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Botoncillo, {\n            numBoton: 2,\n            color: this.state.botoncitos[2],\n            pulsar: n => this.setSeleccionado(n),\n            contador: this.state.contadores[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Botoncillo, {\n            numBoton: 3,\n            color: this.state.botoncitos[3],\n            pulsar: n => this.setSeleccionado(n),\n            contador: this.state.contadores[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Botoncillo, {\n            numBoton: 4,\n            color: this.state.botoncitos[4],\n            pulsar: n => this.setSeleccionado(n),\n            contador: this.state.contadores[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction Botoncillo(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: props.color,\n      onClick: () => props.pulsar(props.numBoton),\n      children: props.contador\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Botoncillo;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Botoncillo\");","map":{"version":3,"names":["Button","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","state","botoncitos","Array","fill","contadores","decrementando","setSeleccionado","num","nuevosContadores","nuevosBotoncitos","setState","iniciarReduccion","reducir","indicesOrdenados","map","valor","index","filter","item","sort","a","b","length","maxIndex","forEach","contador","some","setTimeout","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Botoncillo","numBoton","color","pulsar","n","onClick","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/Proyectos/DWECL/DWECL/REACT/cincolobitos/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from 'reactstrap';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      botoncitos: Array(5).fill('secondary'),\n      contadores: Array(5).fill(0),\n      decrementando: false,\n    };\n  }\n\n  setSeleccionado(num) {\n    // Incrementar el contador del botón seleccionado\n    const nuevosContadores = [...this.state.contadores];\n    nuevosContadores[num] += 1;\n\n    // Cambiar el color del botón seleccionado a \"info\"\n    const nuevosBotoncitos = [...this.state.botoncitos];\n    nuevosBotoncitos[num] = 'info';\n\n    this.setState({ contadores: nuevosContadores, botoncitos: nuevosBotoncitos });\n\n    // Iniciar el proceso de reducción si no está en marcha\n    if (!this.state.decrementando) {\n      this.iniciarReduccion();\n    }\n  }\n\n  iniciarReduccion() {\n    this.setState({ decrementando: true });\n\n    const reducir = () => {\n      let contadores = [...this.state.contadores];\n\n      // Ordenar los índices por el valor de los contadores, de mayor a menor\n      const indicesOrdenados = contadores\n        .map((valor, index) => ({ valor, index }))\n        .filter((item) => item.valor > 0) // Filtrar solo botones activos\n        .sort((a, b) => b.valor - a.valor) // Ordenar por valor descendente\n        .map((item) => item.index);\n\n      if (indicesOrdenados.length > 0) {\n        // Reducir el valor del contador más alto\n        const maxIndex = indicesOrdenados[0];\n        contadores[maxIndex] -= 1;\n\n        // Actualizar colores y contadores\n        const nuevosBotoncitos = Array(5).fill('secondary');\n        contadores.forEach((contador, index) => {\n          if (contador > 0) {\n            nuevosBotoncitos[index] = 'info';\n          }\n        });\n\n        this.setState({ contadores, botoncitos: nuevosBotoncitos }, () => {\n          // Continuar si todavía hay contadores activos\n          if (indicesOrdenados.some((index) => contadores[index] > 0)) {\n            setTimeout(reducir, 1000); // Reducir nuevamente después de 1 segundo\n          } else {\n            this.setState({ decrementando: false });\n          }\n        });\n      }\n    };\n\n    reducir();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1></h1>\n          <div>\n            <Botoncillo\n              numBoton={0}\n              color={this.state.botoncitos[0]}\n              pulsar={(n) => this.setSeleccionado(n)}\n              contador={this.state.contadores[0]}\n            />\n            <Botoncillo\n              numBoton={1}\n              color={this.state.botoncitos[1]}\n              pulsar={(n) => this.setSeleccionado(n)}\n              contador={this.state.contadores[1]}\n            />\n            <Botoncillo\n              numBoton={2}\n              color={this.state.botoncitos[2]}\n              pulsar={(n) => this.setSeleccionado(n)}\n              contador={this.state.contadores[2]}\n            />\n            <Botoncillo\n              numBoton={3}\n              color={this.state.botoncitos[3]}\n              pulsar={(n) => this.setSeleccionado(n)}\n              contador={this.state.contadores[3]}\n            />\n            <Botoncillo\n              numBoton={4}\n              color={this.state.botoncitos[4]}\n              pulsar={(n) => this.setSeleccionado(n)}\n              contador={this.state.contadores[4]}\n            />\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nfunction Botoncillo(props) {\n  return (\n    <>\n      <Button color={props.color} onClick={() => props.pulsar(props.numBoton)}>\n        {props.contador}\n      </Button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}