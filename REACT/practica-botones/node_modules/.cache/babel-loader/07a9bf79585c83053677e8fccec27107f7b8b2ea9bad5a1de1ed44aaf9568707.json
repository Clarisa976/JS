{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Proyectos/DWECL/DWECL/REACT/practica-botones/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from 'reactstrap';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colores: Array(5).fill('secondary'),\n      ultimosBotones: [] //recuerda los ultimos dos\n    };\n  }\n  cambiarColor(numBotoncito) {\n    let copia = this.state.colores;\n    if (this.state.colores[numBotoncito] == 'secondary') {\n      copia[numBotoncito] = \"info\";\n    } else {\n      copia[numBotoncito] = \"secondary\";\n    }\n    this.setState({\n      colores: copia\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.colores[0],\n        onClick: () => this.cambiarColor(0),\n        children: \" Uno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.colores[1],\n        onClick: () => this.cambiarColor(1),\n        children: \" Dos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.colores[2],\n        onClick: () => this.cambiarColor(2),\n        children: \" Tres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.colores[3],\n        onClick: () => this.cambiarColor(3),\n        children: \" Cuatro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: this.state.colores[4],\n        onClick: () => this.cambiarColor(4),\n        children: \" Cinco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","Button","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","state","colores","Array","fill","ultimosBotones","cambiarColor","numBotoncito","copia","setState","render","children","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/opt/lampp/htdocs/Proyectos/DWECL/DWECL/REACT/practica-botones/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from 'reactstrap';\nimport { Component } from 'react';\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      colores:Array(5).fill('secondary'),\n      ultimosBotones: []//recuerda los ultimos dos\n    }\n\n}\n\ncambiarColor(numBotoncito){\n  let copia = this.state.colores;\n  if(this.state.colores[numBotoncito]=='secondary'){\n    copia[numBotoncito]=\"info\";\n  }else{\n    copia[numBotoncito]=\"secondary\";\n  }\n  this.setState({colores:copia})\n}\n\n  \n\n  render(){\n    return (\n      <>\n        <Button color={this.state.colores[0]} onClick={()=>this.cambiarColor(0)}> Uno</Button>\n        <Button color={this.state.colores[1]}onClick={()=>this.cambiarColor(1)}> Dos</Button>\n        <Button color={this.state.colores[2]}onClick={()=>this.cambiarColor(2)}> Tres</Button>\n        <Button color={this.state.colores[3]}onClick={()=>this.cambiarColor(3)}> Cuatro</Button>\n        <Button color={this.state.colores[4]}onClick={()=>this.cambiarColor(4)}> Cinco</Button>\n        \n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,GAAG,SAASL,SAAS;EACzBM,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAC;MACTC,OAAO,EAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,WAAW,CAAC;MAClCC,cAAc,EAAE,EAAE;IACpB,CAAC;EAEL;EAEAC,YAAYA,CAACC,YAAY,EAAC;IACxB,IAAIC,KAAK,GAAG,IAAI,CAACP,KAAK,CAACC,OAAO;IAC9B,IAAG,IAAI,CAACD,KAAK,CAACC,OAAO,CAACK,YAAY,CAAC,IAAE,WAAW,EAAC;MAC/CC,KAAK,CAACD,YAAY,CAAC,GAAC,MAAM;IAC5B,CAAC,MAAI;MACHC,KAAK,CAACD,YAAY,CAAC,GAAC,WAAW;IACjC;IACA,IAAI,CAACE,QAAQ,CAAC;MAACP,OAAO,EAACM;IAAK,CAAC,CAAC;EAChC;EAIEE,MAAMA,CAAA,EAAE;IACN,oBACEf,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA,CAACH,MAAM;QAACoB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;QAACW,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACP,YAAY,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtFtB,OAAA,CAACH,MAAM;QAACoB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;QAAAW,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACP,YAAY,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFtB,OAAA,CAACH,MAAM;QAACoB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;QAAAW,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACP,YAAY,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtFtB,OAAA,CAACH,MAAM;QAACoB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;QAAAW,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACP,YAAY,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxFtB,OAAA,CAACH,MAAM;QAACoB,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;QAAAW,OAAO,EAAEA,CAAA,KAAI,IAAI,CAACP,YAAY,CAAC,CAAC,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAEvF,CAAC;EAEP;AACF;AAEA,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}